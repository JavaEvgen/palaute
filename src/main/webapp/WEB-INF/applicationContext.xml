<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- SPRING MVC MÄÄRITYKSET -->

	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Scans the classpath of this application for @Components to deploy as 
		beans -->
	<context:component-scan base-package="fi.palaute" />
	<!-- Configures the @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Forwards requests to the "/" resource to the "welcome" view -->
	<mvc:view-controller path="/" view-name="login" />

	<!-- Resolves view names to protected .jsp resources within the /WEB-INF/views 
		directory -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Production implementation of the JavaMailSender interface, supporting 
		both JavaMail MimeMessages and Spring SimpleMailMessages -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="teamlilatunnit@gmail.com" />
		<property name="password" value="Salasana1" />

		<!-- The name of the property, following JavaBean naming conventions -->
		<property name="javaMailProperties">
			<props>

				<prop key="mail.smtp.port">587</prop>
				<prop key="mail.smtp.host">smtp.gmail.com</prop>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>

			</props>
		</property>
	</bean>



	<!-- DATA SOURCE -->

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${db.driver}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<context:property-placeholder location="classpath*:/db_connection.properties" />

	<!-- SPRING SECURITY -->

	<sec:http auto-config="true" use-expressions="true">
		<!-- <sec:port-mappings> <sec:port-mapping http="80" https="443"/> <sec:port-mapping 
			http="9080" https="9443"/> <sec:port-mapping http="8080" https="8443"/> <sec:port-mapping 
			http="7777" https="7443"/> </sec:port-mappings> requires-channel="https" -->
		<!-- lisäämällä requires-channel="https" saadaan https toimimaan, kokeilemme 
			torstaina -->
		<sec:intercept-url pattern="/secure/admin/super/**"
			access="hasRole('ROLE_ADMIN')" />
		<sec:intercept-url pattern="/secure/*" access="isAuthenticated()" />
		<sec:intercept-url pattern="/*" access="permitAll" />

		<sec:form-login login-page="/loginpage"
			default-target-url="/secure/oma" authentication-failure-url="/loginfail" />

		<sec:logout logout-success-url="/logout" />

		<sec:headers>
			<sec:cache-control />
			<sec:hsts />
		</sec:headers>

	</sec:http>


	<bean id="encoder"
		class="org.springframework.security.crypto.password.StandardPasswordEncoder" />


	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:password-encoder ref="encoder" />
			<sec:jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select sahkoposti, salasana, 1 from kayttaja where sahkoposti=?"
				authorities-by-username-query="select u.sahkoposti, a.role from kayttaja u JOIN kayttajan_authority ua ON (u.kaytID = ua.kayttaja_id) JOIN authority a ON (a.id = ua.authority_id) WHERE u.sahkoposti = ?" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<!-- USER DEFINITIONS BY XML <sec:authentication-manager> <sec:authentication-provider> 
		<sec:user-service> <sec:user name="user" password="userpassu" authorities="ROLE_USER" 
		/> <sec:user name="admin" password="adminpassu" authorities="ROLE_ADMIN" 
		/> </sec:user-service> </sec:authentication-provider> </sec:authentication-manager> -->


	<sec:global-method-security
		pre-post-annotations="enabled" />
		
	
</beans>
